<?xml version="1.0" encoding="UTF-8"?>
<sequence name="Avocado_Set_Pwd_Email_Send_SEQ" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
  <log>
    <property name="Entering Avocado_Set_Pwd_Email_Send_Sequence" value="Entering Avocado_Set_Pwd_Email_Send_Sequence"/>
  </log>
  <filter xmlns:ns="http://org.apache.synapse/xsd" xpath="$body/jsonObject/errorMessage">
    <then>
      <send/>
    </then>
    <else>
      <property expression="$body/jsonObject/identifier/value"
        name="identifierValue" scope="default" type="STRING"/>
      <property expression="$body/jsonObject/domain/domainName"
        name="domainName" scope="default" type="STRING"/>
      <script language="js"><![CDATA[var Base64={_keyStr:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",encode:function(e){var t="";var n,r,i,s,o,u,a;var f=0;e=Base64._utf8_encode(e);while(f<e.length){n=e.charCodeAt(f++);r=e.charCodeAt(f++);i=e.charCodeAt(f++);s=n>>2;o=(n&3)<<4|r>>4;u=(r&15)<<2|i>>6;a=i&63;if(isNaN(r)){u=a=64}else if(isNaN(i)){a=64}t=t+this._keyStr.charAt(s)+this._keyStr.charAt(o)+this._keyStr.charAt(u)+this._keyStr.charAt(a)}return t},decode:function(e){var t="";var n,r,i;var s,o,u,a;var f=0;e=e.replace(/[^A-Za-z0-9\+\/\=]/g,"");while(f<e.length){s=this._keyStr.indexOf(e.charAt(f++));o=this._keyStr.indexOf(e.charAt(f++));u=this._keyStr.indexOf(e.charAt(f++));a=this._keyStr.indexOf(e.charAt(f++));n=s<<2|o>>4;r=(o&15)<<4|u>>2;i=(u&3)<<6|a;t=t+String.fromCharCode(n);if(u!=64){t=t+String.fromCharCode(r)}if(a!=64){t=t+String.fromCharCode(i)}}t=Base64._utf8_decode(t);return t},_utf8_encode:function(e){e=e.replace(/\r\n/g,"\n");var t="";for(var n=0;n<e.length;n++){var r=e.charCodeAt(n);if(r<128){t+=String.fromCharCode(r)}else if(r>127&&r<2048){t+=String.fromCharCode(r>>6|192);t+=String.fromCharCode(r&63|128)}else{t+=String.fromCharCode(r>>12|224);t+=String.fromCharCode(r>>6&63|128);t+=String.fromCharCode(r&63|128)}}return t},_utf8_decode:function(e){var t="";var n=0;var r=c1=c2=0;while(n<e.length){r=e.charCodeAt(n);if(r<128){t+=String.fromCharCode(r);n++}else if(r>191&&r<224){c2=e.charCodeAt(n+1);t+=String.fromCharCode((r&31)<<6|c2&63);n+=2}else{c2=e.charCodeAt(n+1);c3=e.charCodeAt(n+2);t+=String.fromCharCode((r&15)<<12|(c2&63)<<6|c3&63);n+=3}}return t}}
            
            var domainName =   mc.getProperty('domainName');
            var identifierValue =   mc.getProperty('identifierValue');
            var urlInfo = identifierValue+":"+domainName;
            var encodedString = Base64.encode(urlInfo);
				mc.setProperty("encodedString",encodedString);]]></script>
      <property
        expression="fn:concat( get-property('emailContent'),'/',get-property('encodedString'))"
        name="emailContent" scope="default" type="STRING"/>
      <log>
        <property expression="get-property('domainName')" name="DOMAINN"/>
      </log>
      <script language="js"><![CDATA[var str = mc.getProperty('domainName'); 
			 var userName = mc.getProperty('userName'); 

			if(userName!=null && userName!='null' && userName!=''){			 
				 var str = mc.getProperty('domainName');
				 var index = str.indexOf(".galaxy");
				 var domain= '';
				 var userWithDomain = '';

				if(index>0){
					domain= str.slice(0, index); 
				}
				if(domain!=null && domain!=""){
				userWithDomain = userName+"@"+domain;
				mc.setProperty("userName",userWithDomain);
				}
			}]]></script>
      <payloadFactory media-type="json">
        <format>{
					"subject":"$1",
					"emailTemplate":"$2",
					"toAddresses":"$3",
					"content":"$4",
					"userName": "$5",
					"to":"$6"
					}</format>
        <args>
          <arg evaluator="xml" expression="get-property('emailSubject')"/>
          <arg evaluator="xml" expression="get-property('emailTemplate')"/>
          <arg evaluator="xml" expression="get-property('emailToAddresses')"/>
          <arg evaluator="xml" expression="get-property('emailContent')"/>
          <arg evaluator="xml" expression="get-property('userName')"/>
          <arg evaluator="xml" expression="get-property('to')"/>
        </args>
      </payloadFactory>
      <property expression="get-property('Authorization')"
        name="x-jwt-assertion" scope="transport" type="STRING"/>
      <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
      <send>
        <endpoint key="conf:/endpoints/user/Avocado_Set_Pwd_Send_Email_EP.xml"/>
      </send>
    </else>
  </filter>
</sequence>
