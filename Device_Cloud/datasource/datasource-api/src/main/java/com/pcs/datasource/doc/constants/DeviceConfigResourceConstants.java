package com.pcs.datasource.doc.constants;

public class DeviceConfigResourceConstants extends ResourceConstants {

	public static final String CHECK_DEVICE_CONFIG_EXISTS_SUMMARY = "Check if device configuration template name exists";
	public static final String CHECK_DEVICE_CONFIG_EXISTS_DESC = "This is the service to be used to check if a device configuration template name exists";

	public static final String INSERT_DEVICE_CONFIG_TEMPLATE_SUMMARY = "Create device configuration template";
	public static final String INSERT_DEVICE_CONFIG_TEMPLATE_DESC = "This is the service to be used to create new device configuration template ,sample payload :{\"deviceMake\":\"Teltonika\",\"deviceType\":\"Telematics\",\"deviceModel\":\"FMS\",\"deviceProtocol\":\"FM5300\",\"deviceProtocolVersion\":\"1.0.0\",\"name\":\"Hyster3p0TX\",\"configPoints\":[{\"pointId\":\"1\",\"pointName\":\"DIN1\",\"dataType\":\"STRING\",\"unit\":\"unitless\",\"displayName\":\"Engine Status\",\"physicalQuantity\":\"generic_quantity\",\"systemTag\":\"Power\",\"precedence\":\"1\",\"expression\":\"%24%0D%0A%7B%0D%0A%09EngineStatus%3B%0D%0A%09EngineStatus%3Dconvert%3AconvertToDecimal%28DIN1%29%3D%3D1%3F%27ON%27%3A%27OFF%27%3B%0D%0A%09EngineStatus%3B%0D%0A%7D\"},{\"pointId\":\"11\",\"pointName\":\"Analog 3\",\"dataType\":\"FLOAT\",\"unit\":\"litre\",\"displayName\":\"Fuel Level\",\"physicalQuantity\":\"Volume\",\"systemTag\":\"Power\",\"precedence\":\"2\",\"expression\":\"%24%0D%0A%7B%0D%0A%09FuelLevel%3B%0D%0A%09if%28EngineStatus+eq+%27OFF%27%29%0D%0A%09%09return+%27N%2FA%27%3B%0D%0A%09FuelLevel%3Dconvert%3AconvertToDecimal%28Analog3%29%2F1000.00%3B%0D%0A%09if%28%21%28FuelLevel+ge+0.50+and+FuelLevel+le+2.60%29%29%0D%0A%09%09FuelLevel%3D%27ERROR%27%3B%0D%0A%09+else%0D%0A%09%09%5BFuelLevel%3D-39.663%2AFuelLevel%2A%2812%2FVehicleBattery%29%2B125%2C%0D%0A%09%09FuelLevel%3Dnumber%3AformatDouble%28FuelLevel%2C2%29%5D%0D%0A%09FuelLevel%3B%0D%0A%7D\"}]}";

	public static final String UPDATE_DEVICE_CONFIG_TEMPLATE_SUMMARY = "Update an existing device configuration template";
	public static final String UPDATE_DEVICE_CONFIG_TEMPLATE_DESC = "This is the service to be used to update an existing device configuration template,sample payload :{\"name\":\"ConfigWithNoParamTest10\",\"deviceMake\":\"PCS\",\"deviceType\":\"Edge Device\",\"deviceModel\":\"EDCP\",\"deviceProtocol\":\"EDCP\",\"deviceProtocolVersion\":\"1.0.0\",\"configPoints\":[{\"pointId\":\"11\",\"pointName\":\"AI108\",\"displayName\":\"Door Access\",\"physicalQuantity\":\"generic_quantity\",\"dataType\":\"float\",\"precedence\":\"2\",\"systemTag\":\"Door\",\"customTags\":[],\"extensions\":[{\"extensionType\":\"ACCESS TYPE\",\"extensionName\":\"READONLY\"},{\"extensionType\":\"Acquisition Mode\",\"extensionName\":\"STATECHANGE ACQUISITION\"}],\"alarmExtensions\":[{\"extensionName\":\"STATE CHANGE ALARM\",\"extensionType\":\"ALARM\",\"criticality\":\"MAINTENANCE\",\"alarmMessage\":\"AlarmActive\",\"normalMessage\":\"Normal\",\"upperThresholdAlarmMessage\":\"This operation is not supported for StateChangeAlarm\",\"lowerThresholdAlarmMessage\":\"This operation is not supported for StateChangeAlarm\",\"upperThresholdNormalMessage\":\"This operation is not supported for StateChangeAlarm\",\"lowerThresholdNormalMessage\":\"This operation is not supported for StateChangeAlarm\"}]}]}";

	public static final String GET_ALL_DEVICE_CONFIG_TEMPLATES_SUMMARY = "Get all device configuration templates";
	public static final String GET_ALL_DEVICE_CONFIG_TEMPLATES_DESC = "This is the service to be used to get all existing device configuration templates with an optional filter on protocol version,sample payload :{\"make\":\"Teltonika\",\"deviceType\":\"Telematics\",\"model\":\"FMS\",\"protocol\":\"FM4100\",\"version\":\"0.0.1\"}";
	public final static String GET_ALL_DEVICE_CONFIG_TEMPLATES_SUCCESS_RESP = "[{\"name\":\"test1\",\"deviceMake\":\"Teltonika\",\"deviceType\":\"Telematics\",\"deviceModel\":\"FMS\",\"deviceProtocol\":\"FM5300\",\"deviceProtocolVersion\":\"1.0.0\",\"configPoints\":[{\"pointId\":\"11\",\"pointName\":\"Analog 3\",\"type\":\"FLOAT\",\"unit\":\"litre\",\"displayName\":\"Fuel Level\",\"physicalQuantity\":\"Volume\",\"systemTag\":\"Power\",\"precedence\":\"2\",\"expression\":\"$\\n{\\nFuelLevel;\\nif(EngineStatus eq 'OFF')\\nreturn 'N/A';\\nFuelLevel=convert:convertToDecimal(Analog3)/1000.00;\\nif(!(FuelLevel ge 0.50 and FuelLevel le 2.60))\\nFuelLevel='ERROR';\\n else\\n[FuelLevel=-39.663*FuelLevel*(12/VehicleBattery)+125,\\nFuelLevel=number:formatDouble(FuelLevel,2)]\\nFuelLevel;\\n}\"},{\"pointId\":\"1\",\"pointName\":\"DIN1\",\"type\":\"STRING\",\"unit\":\"unitless\",\"displayName\":\"Engine Status\",\"physicalQuantity\":\"generic_quantity\",\"systemTag\":\"Power\",\"precedence\":\"1\",\"expression\":\"$\\n{\\nEngineStatus;\\nEngineStatus=convert:convertToDecimal(DIN1)==1?'ON':'OFF';\\nEngineStatus;\\n}\"}]},{\"name\":\"Hyster3p0TX\",\"deviceMake\":\"Teltonika\",\"deviceType\":\"Telematics\",\"deviceModel\":\"FMS\",\"deviceProtocol\":\"FM5300\",\"deviceProtocolVersion\":\"1.0.0\",\"configPoints\":[{\"pointId\":\"1\",\"pointName\":\"DIN1\",\"type\":\"STRING\",\"unit\":\"unitless\",\"displayName\":\"Engine Status\",\"physicalQuantity\":\"generic_quantity\",\"systemTag\":\"Power\",\"precedence\":\"1\",\"expression\":\"$\\n{\\nEngineStatus;\\nEngineStatus=convert:convertToDecimal(DIN1)==1?'ON':'OFF';\\nEngineStatus;\\n}\"},{\"pointId\":\"1\",\"pointName\":\"DIN1\",\"type\":\"STRING\",\"unit\":\"unitless\",\"displayName\":\"Motion Status\",\"physicalQuantity\":\"generic_quantity\",\"systemTag\":\"Power\",\"precedence\":\"3\",\"expression\":\"$\\n{\\nMotionStatus;\\nif(EngineStatus eq 'OFF')\\nMotionStatus='OFF';\\nelse if(EngineStatus eq 'ON'  and DynamoStatus eq 'Inactive')\\nMotionStatus='IDLE';\\nelse if(EngineStatus eq 'ON'  and DynamoStatus eq 'Active' and SeatSwitch eq 'Active')\\nMotionStatus=\\\"ON\\\";\\nMotionStatus;\\n}\"},{\"pointId\":\"11\",\"pointName\":\"Analog 3\",\"type\":\"FLOAT\",\"unit\":\"litre\",\"displayName\":\"Fuel Level\",\"physicalQuantity\":\"Volume\",\"systemTag\":\"Power\",\"precedence\":\"2\",\"expression\":\"$\\n{\\nFuelLevel;\\nif(EngineStatus eq 'OFF')\\nreturn 'N/A';\\nFuelLevel=convert:convertToDecimal(Analog3)/1000.00;\\nif(!(FuelLevel ge 0.50 and FuelLevel le 2.60))\\nFuelLevel='ERROR';\\n else\\n[FuelLevel=-39.663*FuelLevel*(12/VehicleBattery)+125,\\nFuelLevel=number:formatDouble(FuelLevel,2)];\\nFuelLevel;\\n}\"}]}]";

	public static final String GET_DEVICE_CONFIG_TEMPLATE_SUMMARY = "Get device configuration template";
	public static final String GET_DEVICE_CONFIG_TEMPLATE_DESC = "This is the service to be used to get an existing device configuration template,sample payload :{\"make\":\"Teltonika\",\"deviceType\":\"Telematics\",\"model\":\"FMS\",\"protocol\":\"FM4100\",\"version\":\"0.0.1\"}";
	public final static String GET_DEVICE_CONFIG_TEMPLATE_SUCCESS_RESP = "[{\"name\":\"test1\",\"deviceMake\":\"Teltonika\",\"deviceType\":\"Telematics\",\"deviceModel\":\"FMS\",\"deviceProtocol\":\"FM5300\",\"deviceProtocolVersion\":\"1.0.0\",\"configPoints\":[{\"pointId\":\"11\",\"pointName\":\"Analog 3\",\"type\":\"FLOAT\",\"unit\":\"litre\",\"displayName\":\"Fuel Level\",\"physicalQuantity\":\"Volume\",\"systemTag\":\"Power\",\"precedence\":\"2\",\"expression\":\"$\\n{\\nFuelLevel;\\nif(EngineStatus eq 'OFF')\\nreturn 'N/A';\\nFuelLevel=convert:convertToDecimal(Analog3)/1000.00;\\nif(!(FuelLevel ge 0.50 and FuelLevel le 2.60))\\nFuelLevel='ERROR';\\n else\\n[FuelLevel=-39.663*FuelLevel*(12/VehicleBattery)+125,\\nFuelLevel=number:formatDouble(FuelLevel,2)]\\nFuelLevel;\\n}\"},{\"pointId\":\"1\",\"pointName\":\"DIN1\",\"type\":\"STRING\",\"unit\":\"unitless\",\"displayName\":\"Engine Status\",\"physicalQuantity\":\"generic_quantity\",\"systemTag\":\"Power\",\"precedence\":\"1\",\"expression\":\"$\\n{\\nEngineStatus;\\nEngineStatus=convert:convertToDecimal(DIN1)==1?'ON':'OFF';\\nEngineStatus;\\n}\"}]},{\"name\":\"Hyster3p0TX\",\"deviceMake\":\"Teltonika\",\"deviceType\":\"Telematics\",\"deviceModel\":\"FMS\",\"deviceProtocol\":\"FM5300\",\"deviceProtocolVersion\":\"1.0.0\",\"configPoints\":[{\"pointId\":\"1\",\"pointName\":\"DIN1\",\"type\":\"STRING\",\"unit\":\"unitless\",\"displayName\":\"Engine Status\",\"physicalQuantity\":\"generic_quantity\",\"systemTag\":\"Power\",\"precedence\":\"1\",\"expression\":\"$\\n{\\nEngineStatus;\\nEngineStatus=convert:convertToDecimal(DIN1)==1?'ON':'OFF';\\nEngineStatus;\\n}\"},{\"pointId\":\"1\",\"pointName\":\"DIN1\",\"type\":\"STRING\",\"unit\":\"unitless\",\"displayName\":\"Motion Status\",\"physicalQuantity\":\"generic_quantity\",\"systemTag\":\"Power\",\"precedence\":\"3\",\"expression\":\"$\\n{\\nMotionStatus;\\nif(EngineStatus eq 'OFF')\\nMotionStatus='OFF';\\nelse if(EngineStatus eq 'ON'  and DynamoStatus eq 'Inactive')\\nMotionStatus='IDLE';\\nelse if(EngineStatus eq 'ON'  and DynamoStatus eq 'Active' and SeatSwitch eq 'Active')\\nMotionStatus=\\\"ON\\\";\\nMotionStatus;\\n}\"},{\"pointId\":\"11\",\"pointName\":\"Analog 3\",\"type\":\"FLOAT\",\"unit\":\"litre\",\"displayName\":\"Fuel Level\",\"physicalQuantity\":\"Volume\",\"systemTag\":\"Power\",\"precedence\":\"2\",\"expression\":\"$\\n{\\nFuelLevel;\\nif(EngineStatus eq 'OFF')\\nreturn 'N/A';\\nFuelLevel=convert:convertToDecimal(Analog3)/1000.00;\\nif(!(FuelLevel ge 0.50 and FuelLevel le 2.60))\\nFuelLevel='ERROR';\\n else\\n[FuelLevel=-39.663*FuelLevel*(12/VehicleBattery)+125,\\nFuelLevel=number:formatDouble(FuelLevel,2)];\\nFuelLevel;\\n}\"}]}]";

	public static final String INACTIVATE_DEVICE_CONFIG_TEMPLATES_SUMMARY = "De-activate device configuration templates";
	public static final String INACTIVATE_DEVICE_CONFIG_TEMPLATES_DESC = "This is the service to be used to deactivate device configuration templates,sample payload :[\"HySter1\",\"Teltonika\"]";

	public static final String GET_DEVICE_CONF_SUMMARY = "Get point configurations of a device";
	public static final String GET_DEVICE_CONF_DESC = "This is the service to be used to fetch point configurations of a device";
	public static final String GET_DEVICE_CONF_SUCCESS_RESP = "{ \"deviceMake\": \"Teltonika\", \"deviceType\": \"Telematics\", \"deviceModel\": \"FMS\", \"deviceProtocol\": \"FM4100\", \"deviceProtocolVersion\": \"0.0.1\", \"configPoints\": [ { \"pointId\": \"154\", \"pointName\": \"CAN9\", \"type\": \"STRING\", \"displayName\": \"Reactive Power C\", \"physicalQuantity\": \"generic_quantity\", \"systemTag\": \"Power\", \"precedence\": \"5\", \"expression\": \"$\n{\nREACTIVEPOWER;\nif(!(number:isNumber(PhaseCApparentPower) and number:isNumber(PhaseCPowerFactor)))\nreturn 'ERROR';\n\nif(EngineStatus eq 'OFF')\nreturn 0;\nREACTIVEPOWER=((PhaseCApparentPower)*math:sqrt((1-(math:pow(PhaseCPowerFactor,2)))));\nif(!(REACTIVEPOWER ge 0 and REACTIVEPOWER le 9999999999))\nREACTIVEPOWER='ERROR';\nelse\nREACTIVEPOWER=number:formatDouble(REACTIVEPOWER,2);\nREACTIVEPOWER;\n}\" }, { \"pointId\": \"154\", \"pointName\": \"CAN9\", \"type\": \"STRING\", \"displayName\": \"Phase C Power Factor\", \"physicalQuantity\": \"generic_quantity\", \"systemTag\": \"Power\", \"precedence\": \"4\", \"expression\": \"$\n{\nPOWERFACTOR;\nif(!(number:isNumber(PhaseCActivePower) and number:isNumber(PhaseCApparentPower)))\nreturn 'ERROR';\n\nif(EngineStatus eq 'OFF')\nreturn 0;\nPOWERFACTOR=((PhaseCActivePower)/(PhaseCApparentPower));\nif(!(POWERFACTOR ge 0 and POWERFACTOR le 1))\nPOWERFACTOR='ERROR';\nelse\nPOWERFACTOR=number:formatDouble(POWERFACTOR,2);\nPOWERFACTOR;\n}\" } ] }";

}
