<%
var pageId;
var VarTenantKey;
var VarCurrentTenantInfo;
var ObjPageAccess;

(function() {

	if (!user) {
        sendLogin();
        return;
    }
	
	var vars;
	var matcher = new URIMatcher(request.getRequestURI());
	
	if (matcher.match('/alarm/{id}')) {
	
        vars = matcher.elements();
        pageId = (vars.id).toString();
		
    } else {
	
		response.sendError(404, JSON.stringify({
					error: true
				}));
		return;
		
	}
	
	var pages = require('/configs/pages.json');
	if (!pages.alarm[pageId]) {
	
		response.sendRedirect(utils.tenantedPrefix(urlPrefix+"error/404"));
        return;
		
	} else {
	
		var usr = require('/modules/user.js');
		var permission = require('/configs/permissions.json');
		ObjPageAccess = {'console':'0','history':'0','define':'0','view':'0'};
		var ObjPageConf = {'view':['define']};
		var VarPageRef = permission.alarm;		
		ObjPageAccess = usr.FnGetPageAccessAuthorization(ObjPageAccess,ObjPageConf,pageId,VarPageRef);	
				
		var method = request.getMethod();
		
		if (method === 'POST') { 
			VarTenantKey = (request.getParameter("gapp-tenant-key") != null) ? request.getParameter("gapp-tenant-key") : '';
		} else {
			var ObjTenantInfo = session.get('PARENT_CLIENT');
			if(ObjTenantInfo != null){
				VarTenantKey = ObjTenantInfo['tenantName'];
			}
		}
		
		VarCurrentTenantInfo = usr.FnGetCurrentClientInfo(VarTenantKey);
		
		include(utils.resolvePath('templates/'+pages.alarm[pageId]));
	}

} ()); %>

